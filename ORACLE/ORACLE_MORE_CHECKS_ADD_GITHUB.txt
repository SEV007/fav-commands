UNLOCKING USER //To unlock a user Run the following sql as administrator user like SYS or SYSTEM
ALTER USER user_name IDENTIFIED BY password ACCOUNT UNLOCK;

Oracle agent is now using RMAN, which requires "SYSDBA" privileges to run. 
(Note that this is *not* the same as "DBA" privileges as indicated in
articles like http://support.veritas.com/docs/230036 and http://seer.entsupport.symantec.com/docs/234629.htm.)
The DBA role does *not* have the right to launch RMAN, while the SYSDBA role does.
After I re-ran AgentConfig (which clearly asks for a SYSDBA account -- I should read closer!)
and set the SYSDBA accounts to the Oracle backup account I created with SYSDBA privileges,
the agent recognized everything and ran correctly.

//for user permission and roles grant
connect / as sysdba

//LIST ROLES IN ORACLE DATABAE
SELECT * FROM DBA_ROLES;

//CREATE ORACLE BACKUP USER //GRANT PERMISSIONS AND ROLES
To create the account and assign the appropriate roles in Oracle Server Manager or SQLPlus, execute the following commands:
 
1. CREATE USER BACKUP IDENTIFIED BY ORACLE;  
   (BACKUP is the account name and ORACLE is the password in this example.)
2. GRANT UNLIMITED TABLESPACE TO BACKUP;
3. GRANT AQ_ADMINISTRATOR_ROLE TO BACKUP;
4. GRANT SYSDBA TO BACKUP;
5. GRANT CONNECT TO BACKUP;
6. ALTER USER BACKUP DEFAULT ROLE ALL;
7. ALTER USER BACKUP DEFAULT TABLESPACE SYSTEM;
To connect to the Oracle "Server Manager" (for the BACKUP account), execute the following command:
  connect BACKUP/ORACLE   (where BACKUP is the account name and ORACLE is the password as in the above example)
To verify the roles and privileges associated with this account, execute the following command:

https://www.veritas.com/support/en_US/article.100020849.html


//CONNECT WITH BE CREATED USER
connect BACKUP/PassWD

select * from session_privs;

select * from USER_ROLE_PRIVS;
select * from USER_TAB_PRIVS;
select * from USER_SYS_PRIVS;

users added to password file check:
select * from v$pwfile_users;

//How to ensure the SYS account has required privilege. 
#  sqlplus /nolog 
#  connect / as sysdba 
#  column sysoper format a10; 
#  column sysdba format a10; 
#  select * from v$pwfile_users; 
https://www.veritas.com/support/en_US/article.100019743.html

//CHECK FOR LOCKED ACCOUNTS
SELECT username, account_status, created, lock_date, expiry_date
FROM dba_users
WHERE account_status != 'OPEN';

FOR UNLOCKED ACCOUNTS
SELECT username, account_status, created, lock_date, expiry_date
FROM dba_users
WHERE account_status = 'OPEN';


//CREDENTIALS REQUIRED TO PERFORM BACKUP
https://docs.oracle.com/database/121/ADMQS/GUID-90668C5A-3D99-45E0-BBC0-D2AA98D3F59D.htm

11g SYSDBA
12c SYSBACKUP

//TNSPING
Usage:  tnsping <address>

sample: SID=ora
tnsping ora [ENTER]

//ORACLE INSTANCE STATUS
SELECT INSTANCE_NAME, STATUS, DATABASE_STATUS FROM V$INSTANCE;

#RETURN
INSTANCE_NAME    STATUS       DATABASE_STATUS
---------------- ------------ -----------------
YOUR_DBASE       OPEN         ACTIVE


//ORACLE SID,INSTANCE_NAME,DB_NAME,GLOBAL_NAME
1 - Service Name: Logical representation of database, which way a database is presented to the clients;
(Look into your tnsnames.ora)
2 - SID: An ability to uniquely identify an instance, sinse there can be more then one database in oracle_home,then you need to identify them.

the SID, or Oracle System Identifier, uniquely identifies your Instance on the server, it is usually set in an environment variable called ORACLE_SID

the INSTANCE_NAME must match your ORACLE_SID. In Real Application Cluster, you can have more than one INSTANCE per DATABASE, in which case the INSTANCE_NAME's must be unique.

the DATABASE_NAME usually is the same as INSTANCE_NAME, but can be different (ex:RAC), and it is saved in the CONTROL FILE. to change it, you must recreate the controlfile (Oracle 7) or use the NID utility.

the GLOBAL_NAME can be anything you want, is sometimes used in TNSNAMES.ORA, can be changed with ALTER DATABASE RENAME, and defaults to DB_NAME.DOMAIN_NAME

the SERVICE_NAMES provide one or more SERVICE_NAME to be registered in your listener.



//TNS-03505: Failed to resolve name
https://peoplesofttutorial.com/how-to-resolve-tns-03505-failed-to-resolve-name/

//TNS ENVIRONMENT VARIABLE
If $TNS_ADMIN is not set, then the tnsnames.ora should be in $ORACLE_HOME/network/admin/.
also could be $TNS_NAMES
https://serverfault.com/questions/198595/how-do-i-find-out-which-tnsnames-ora-file-is-being-used-by-my-linux-system

//ORACLE TOOLS FOR NETWORKING
https://docs.oracle.com/cd/B16341_01/doc/server.102/b14196/network002.htm
netmgr
netca

//ORACLE NETMGR OVERVIEW
https://docs.oracle.com/cd/B10501_01/network.920/a96580/admintoo.htm

//TNSNAMES RECOMMEND
I suggest you completely remove the entry from the tnsnames file and used netca to create it. There is possibly a hidden character causing the issue.

//CONFIG ORACLE NETWORKING ON CLIENT MACHINES
https://docs.oracle.com/cd/B16341_01/doc/server.102/b14196/network005.htm
netmgr

//RALUS ERROR This user account does not have the privileges that are required to log on to the oracle database
https://www.veritas.com/support/en_US/article.100000903.html

# Generated by Oracle configuration tools.
 
instance1 =
 
(DESCRIPTION =
 (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.111)(PORT = 1111))
 (CONNECT_DATA =
 (SERVICE_NAME = instance1)
  )
 ) 

//REMOTE_LOGIN_PASSWORD FILE
https://docs.oracle.com/en/database/oracle/oracle-database/12.2/refrn/REMOTE_LOGIN_PASSWORDFILE.html#GUID-6619299E-95E8-4821-B123-3B5899F046C7

//LISTENER FIX
set /etc/hosts

//GET GLOBAL NAME
SELECT * FROM GLOBAL_NAME;

//REMOTE LISTENERS
use this entry for your remote_listener parameter:

LISTENERS_ORACLE =

  (ADDRESS_LIST =

    (ADDRESS = (PROTOCOL = TCP)(HOST = dbn1-v)(PORT = 1521))

    (ADDRESS = (PROTOCOL = TCP)(HOST = dbn2-v)(PORT = 1521))

    (ADDRESS = (PROTOCOL = TCP)(HOST = dbn3-v)(PORT = 1521))

    (ADDRESS = (PROTOCOL = TCP)(HOST = dbn4-v)(PORT = 1521))

    (ADDRESS = (PROTOCOL = TCP)(HOST = dbn5-v)(PORT = 1521))

    (ADDRESS = (PROTOCOL = TCP)(HOST = dbn6-v)(PORT = 1521))

  )

 

alter system set remote_listener='LISTENERS_ORACLE'

alter system register

https://docs.oracle.com/cd/E11882_01/network.112/e41945/listenercfg.htm#NETAG1470

alter system set remote_login_passwordfile =Exclusive scope = spfile;
System altered.

https://oraclelearning.wordpress.com/2012/03/12/altering-sys-password-oracle/

//The listener supports no services FIX
http://logic.edchen.org/how-to-resolve-the-listener-supports-no-services/



//RMAN USAGE
https://docs.oracle.com/cd/A97630_01/server.920/a96566/rcmcnctg.htm
